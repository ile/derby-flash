// Generated by CoffeeScript 1.7.1
var Model, racer;

racer = require('racer');

Model = racer.Model;

module.exports = function(app, options) {
  var Flash;
  options || (options = {});
  return Flash = (function() {
    var middleware, originalRouter;

    function Flash() {}

    Flash.prototype.view = __dirname;

    app.on('render', function(app) {
      var flashq, model, msg, _i, _len;
      model = app.model;
      flashq = model.get('_flash.flashq') || {};
      if (options.useToast && model.toast) {
        for (_i = 0, _len = flashq.length; _i < _len; _i++) {
          msg = flashq[_i];
          model.toast(msg.type, msg.msg);
        }
      } else {
        model.set('_page.flash', flashq);
      }
      return model.del('_flash.flashq');
    });

    Model.prototype.flash = function(type, msg) {
      var _ref;
      if ((_ref = this.req) != null ? _ref.flash : void 0) {
        return this.req.flash(type, msg);
      } else {
        return this.root.push("_flash.flashq", {
          type: type,
          msg: msg
        });
      }
    };

    originalRouter = app.router;

    middleware = function(req, res, next) {
      var model, msg, msgs, type, _i, _len;
      if (req.flash) {
        model = req.getModel();
        msgs = req.flash();
        for (type in msgs) {
          for (_i = 0, _len = type.length; _i < _len; _i++) {
            msg = type[_i];
            model.push("_flash.flashq", {
              type: type,
              msg: msg
            });
          }
        }
      }
      return (originalRouter())(req, res, next);
    };

    app.router = function() {
      return middleware;
    };

    return Flash;

  })();
};
