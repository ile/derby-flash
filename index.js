// Generated by CoffeeScript 1.7.1
var Model, racer;

racer = require('racer');

Model = racer.Model;

module.exports = function(app, options) {
  var Flash;
  options || (options = {});
  return Flash = (function() {
    var middleware, originalRouter;

    function Flash() {}

    Flash.prototype.view = __dirname;

    Flash.prototype.init = function() {
      var flashq, flashq2, model, msg, msgs, type, _i, _j, _len, _len1, _ref;
      model = this.model;
      flashq = model.get('_flash.flashq') || {};
      flashq2 = model.get('_flash.flashq2') || {};
      for (type in flashq2) {
        flashq[type] || (flashq[type] = []);
        _ref = flashq2[type];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          msg = _ref[_i];
          flashq[type].push(msg);
        }
      }
      if (options.useToast) {
        for (type in flashq) {
          msgs = flashq[type];
          for (_j = 0, _len1 = msgs.length; _j < _len1; _j++) {
            msg = msgs[_j];
            model.toast(type, msg);
          }
        }
      } else {
        model.set('_page.flash', flashq);
      }
      model.del('_flash.flashq');
      return model.del('_flash.flashq2');
    };

    Model.prototype.flash = function(type, msg) {
      var _ref;
      if ((_ref = this.req) != null ? _ref.flash : void 0) {
        return this.req.flash(type, msg);
      } else {
        return this.push("_flash.flashq." + type, msg);
      }
    };

    originalRouter = app.router;

    middleware = function(req, res, next) {
      var model;
      if (req.flash) {
        model = req.getModel();
        model.set('_flash.flashq2', req.flash());
      }
      return (originalRouter())(req, res, next);
    };

    app.router = function() {
      return middleware;
    };

    return Flash;

  })();
};
